name: docker

on:
  push:
    tags:
      - "v*"

env:
  DOCKER_REPO: tetricky/misago-image
  GHCR_REPO: tetricky/misago-image

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - linux/arm/v5
          - linux/arm/v7

    steps:
      - name: Set vars
        id: vars
        run: |
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          echo "platform=$(echo -n ${{ matrix.platform }} | sed 's/\//-/g')" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build docker images
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          tags: |
            ${{ env.DOCKER_REPO }}:${{ steps.vars.outputs.version }}-${{ steps.vars.outputs.platform }}
            ${{ env.GHCR_REPO}}:${{ steps.vars.outputs.version }}-${{ steps.vars.outputs.platform }}

  release:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build

    steps:
      - name: Set vars
        id: vars
        run: |
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Create Docker Hub manifest
        run: |
          docker manifest create $DOCKER_REPO:${{ steps.vars.outputs.version }} \
            $DOCKER_REPO:${{ steps.vars.outputs.version }}-linux-amd64 \
            $DOCKER_REPO:${{ steps.vars.outputs.version }}-linux-arm64 \
            $DOCKER_REPO:${{ steps.vars.outputs.version }}-linux-arm-v5 \
            $DOCKER_REPO:${{ steps.vars.outputs.version }}-linux-arm-v7

      - name: Create GHCR manifest
        run: |
          docker manifest create $GHCR_REPO:${{ steps.vars.outputs.version }} \
            $GHCR_REPO:${{ steps.vars.outputs.version }}-linux-amd64 \
            $GHCR_REPO:${{ steps.vars.outputs.version }}-linux-arm64 \
            $GHCR_REPO:${{ steps.vars.outputs.version }}-linux-arm-v5 \
            $GHCR_REPO:${{ steps.vars.outputs.version }}-linux-arm-v7

      - name: Push manifests
        run: |
          docker manifest push $DOCKER_REPO:${{ steps.vars.outputs.version }}
          docker manifest push $GHCR_REPO:${{ steps.vars.outputs.version }}
